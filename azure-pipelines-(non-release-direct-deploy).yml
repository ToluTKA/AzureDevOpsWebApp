trigger:
- main  # Adjust the branch name as needed

pr:
- '*'

pool:
  vmImage: 'windows-latest'

variables:
  azureSubscription: 'ScarStack_Azure_subscription 1 (d8063b4c-5a26-4bb2-a00b-b40ab0c2ba66)'  # Name of the Azure service connection

stages:
- stage: Build
  displayName: 'Build and Publish'
  jobs:
  - job: BuildAndPublish
    steps:
    - task: UseDotNet@2
      inputs:
        packageType: 'sdk'
        installationPath: $(Agent.ToolsDirectory)/dotnet
        version: '7.x'  # Replace with the version you need

    - script: dotnet restore
      displayName: 'Restore'

    - script: dotnet build --configuration Release
      displayName: 'Build'

    - task: DotNetCoreCLI@2
      inputs:
        command: 'publish'
        publishWebProjects: true
        arguments: '--configuration Release --output $(Build.ArtifactStagingDirectory)'

    - task: PublishBuildArtifacts@1
      inputs:
        pathtoPublish: '$(Build.ArtifactStagingDirectory)'
        artifactName: 'drop'
        publishLocation: 'Container'
      
- stage: Deploy
  displayName: 'Deploy to Azure App Service'
  dependsOn: Build
  jobs:
  - deployment: Deploy
    displayName: 'Deploy'
    environment: 'PROD'  # Name of your Azure Environment (e.g., 'production')
    strategy:
      runOnce:
        deploy:
          steps:
          - task: UseDotNet@2
            inputs:
              packageType: 'sdk'
              installationPath: $(Agent.ToolsDirectory)/dotnet
              version: '7.x'  # Replace with the version you need

          - task: AzureRmWebAppDeployment@4
            inputs:
              ConnectionType: 'AzureRM'
              azureSubscription: 'ScarStack_Azure_subscription 1(d8063b4c-5a26-4bb2-a00b-b40ab0c2ba66)'
              appType: 'webApp'
              WebAppName: 'azuredevopswebappmvc'
              deployToSlotOrASE: true
              ResourceGroupName: 'scrstckrsGrp'
              SlotName: 'production'
              packageForLinux: '$(System.DefaultWorkingDirectory)/**/*.zip'


